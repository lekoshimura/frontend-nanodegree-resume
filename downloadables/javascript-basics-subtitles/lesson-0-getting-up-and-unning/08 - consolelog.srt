0:00:00.550,0:00:01.800
Don't forget the semicolon.

0:00:02.830,0:00:07.100
JavaScript uses semicolons to signal the end of statements.

0:00:07.100,0:00:10.760
Try console.log without the semicolon at the end and

0:00:10.760,0:00:13.600
you'll see, that it still works.

0:00:13.600,0:00:16.920
Most JavaScript interpreters are smart enough to guess when you

0:00:16.920,0:00:18.240
need a semicolon.

0:00:18.240,0:00:21.750
But they aren't perfect, so you shouldn't leave things to chance.

0:00:21.750,0:00:23.620
>> Yeah, that's good to know.

0:00:23.620,0:00:26.770
You know, in Python you don't have to use semicolons at all.

0:00:26.770,0:00:32.280
When I was learning JavaScript, I had to keep reminding myself to include one.

0:00:32.280,0:00:33.880
>> Yeah, that's pretty common.

0:00:33.880,0:00:35.930
What about this undefined line here?

0:00:37.110,0:00:41.630
>> It simply means that the console.log command returns undefined.

0:00:41.630,0:00:45.900
Telling us that console.log doesn't create any new data we could save.

0:00:45.900,0:00:46.700
This makes sense,

0:00:46.700,0:00:51.300
because we only want to use console.log to print debugging information.

0:00:51.300,0:00:56.150
>> For example, if I had a property like document.URL, every turn to

0:00:56.150,0:00:58.340
string as the page's URL.

0:00:58.340,0:01:03.820
>> Yeah, we can see it in closed in quotes telling us that we've got a string.
